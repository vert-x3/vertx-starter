{
  "defaults": {
    "groupId": "com.example",
    "artifactId": "starter",
    "language": "java",
    "buildTool": "maven",
    "vertxVersion": "4.1.1",
    "archiveFormat": "zip",
    "jdkVersion": "11",
    "flavor": "vert.x"
  },
  "versions": [
    {
      "number": "3.9.8",
      "exclusions": [
        "vertx-auth-htdigest",
        "vertx-auth-properties",
        "vertx-auth-ldap",
        "vertx-auth-webauthn",
        "vertx-auth-htpasswd",
        "vertx-auth-sql-client",
        "vertx-web-templ-rocker",
        "vertx-web-templ-httl",
        "vertx-web-sstore-cookie",
        "vertx-web-sstore-redis",
        "vertx-web-sstore-infinispan",
        "vertx-json-schema",
        "vertx-web-validation",
        "vertx-web-openapi",
        "vertx-sql-client-templates",
        "vertx-zipkin",
        "vertx-opentracing",
        "vertx-opentelemetry",
        "vertx-mssql-client",
        "vertx-rx-java3"
      ]
    },
    {
      "number": "4.1.1",
      "exclusions": [
        "vertx-sync"
      ]
    },
    {
      "number": "4.2.0-SNAPSHOT",
      "exclusions": [
        "vertx-sync"
      ]
    }
  ],
  "vertxStack": [
    {
      "code": "web",
      "category": "Web",
      "items": [
        {
          "groupId": "io.vertx",
          "artifactId": "vertx-web",
          "name": "Vert.x Web",
          "description": "Vert.x-Web is a tool-kit for writing sophisticated modern web applications and HTTP microservices."
        },
        {
          "groupId": "io.vertx",
          "artifactId": "vertx-web-client",
          "name": "Vert.x Web Client",
          "description": "Vert.x Web Client is an easy to use advanced HTTP client."
        },
        {
          "groupId": "io.vertx",
          "artifactId": "vertx-web-graphql",
          "name": "Web GraphQL Handler",
          "description": "Create GraphQL servers with Vert.x Web and the GraphQL-Java library."
        },
        {
          "groupId": "io.vertx",
          "artifactId": "vertx-web-api-contract",
          "name": "Web API Contract",
          "description": "Web API Contract supports OpenApi 3 specification for a design first approach and provides a validation framework."
        },
        {
          "groupId": "io.vertx",
          "artifactId": "vertx-web-templ-thymeleaf",
          "name": "Thymeleaf template engine"
        },
        {
          "groupId": "io.vertx",
          "artifactId": "vertx-web-templ-handlebars",
          "name": "Handlebars template engine"
        },
        {
          "groupId": "io.vertx",
          "artifactId": "vertx-web-templ-jade",
          "name": "Jade template engine"
        },
        {
          "groupId": "io.vertx",
          "artifactId": "vertx-web-templ-mvel",
          "name": "MVEL template engine"
        },
        {
          "groupId": "io.vertx",
          "artifactId": "vertx-web-templ-pebble",
          "name": "Pebble template engine"
        },
        {
          "groupId": "io.vertx",
          "artifactId": "vertx-web-templ-freemarker",
          "name": "Apache FreeMarker template engine"
        },
        {
          "groupId": "io.vertx",
          "artifactId": "vertx-web-templ-rocker",
          "name": "Rocker template engine"
        },
        {
          "groupId": "io.vertx",
          "artifactId": "vertx-web-templ-httl",
          "name": "HTTL template engine"
        },
        {
          "groupId": "io.vertx",
          "artifactId": "vertx-web-sstore-cookie",
          "name": "Cookie session storage"
        },
        {
          "groupId": "io.vertx",
          "artifactId": "vertx-web-sstore-redis",
          "name": "Redis session storage"
        },
        {
          "groupId": "io.vertx",
          "artifactId": "vertx-web-sstore-infinispan",
          "name": "Session storage with Infinispan Client"
        },
        {
          "groupId": "io.vertx",
          "artifactId": "vertx-web-validation",
          "name": "Web Validation",
          "description": "A library to declaratively parse and validate incoming Vert.x Web HTTP requests."
        },
        {
          "groupId": "io.vertx",
          "artifactId": "vertx-web-openapi",
          "name": "Web OpenAPI",
          "description": "Extends Vert.x Web to support OpenAPI 3, bringing a simple interface for building web routers that conform to OpenAPI contracts."
        }
      ]
    },
    {
      "code": "dataaccess",
      "category": "Data Access",
      "description": "Vert.x provides a few different asynchronous clients for accessing various data stores from your application. You don't have to use these clients - you could use clients direct from the vendor if you prefer (e.g. MongoDB provide their own cool async and reactive clients), but these provide a simple async API which is available in various languages.",
      "items": [
        {
          "groupId": "io.vertx",
          "artifactId": "vertx-pg-client",
          "name": "Reactive PostgreSQL client"
        },
        {
          "groupId": "io.vertx",
          "artifactId": "vertx-mysql-client",
          "name": "Reactive MySQL client"
        },
        {
          "groupId": "io.vertx",
          "artifactId": "vertx-db2-client",
          "name": "Reactive DB2 client"
        },
        {
          "groupId": "io.vertx",
          "artifactId": "vertx-mssql-client",
          "name": "Reactive MSSQL client"
        },
        {
          "groupId": "io.vertx",
          "artifactId": "vertx-mongo-client",
          "name": "MongoDB client"
        },
        {
          "groupId": "io.vertx",
          "artifactId": "vertx-jdbc-client",
          "name": "JDBC client"
        },
        {
          "groupId": "io.vertx",
          "artifactId": "vertx-redis-client",
          "name": "Redis client"
        },
        {
          "groupId": "io.vertx",
          "artifactId": "vertx-cassandra-client",
          "name": "Cassandra client"
        },
        {
          "groupId": "io.vertx",
          "artifactId": "vertx-sql-client-templates",
          "name": "SQL Client Templates",
          "description": "A small library designed to facilitate the execution and data manipulation of SQL queries."
        }
      ]
    },
    {
      "code": "reactive",
      "category": "Reactive",
      "description": "Vert.x provides a few components to make your applications more reactive.",
      "items": [
        {
          "groupId": "io.vertx",
          "artifactId": "vertx-rx-java",
          "name": "Vert.x RxJava v1",
          "description": "Vert.x API for RxJava 1."
        },
        {
          "groupId": "io.vertx",
          "artifactId": "vertx-rx-java2",
          "name": "Vert.x RxJava v2",
          "description": "Vert.x API for RxJava 2."
        },
        {
          "groupId": "io.vertx",
          "artifactId": "vertx-rx-java3",
          "name": "Vert.x RxJava v3",
          "description": "Vert.x API for RxJava 3."
        },
        {
          "groupId": "io.vertx",
          "artifactId": "vertx-reactive-streams",
          "name": "Reactive streams",
          "description": "Vert.x supports reactive streams so your applications can interoperate with other reactive systems such as Akka or Project Reactor."
        },
        {
          "groupId": "io.vertx",
          "artifactId": "vertx-sync",
          "name": "Vert.x Sync",
          "description": "Vertx-sync allows you to deploy verticles that run using fibers. Fibers are very lightweight threads that can be blocked without blocking a kernel thread. This enables you to write your verticle code in a familiar synchronous style."
        },
        {
          "groupId": "io.vertx",
          "artifactId": "vertx-lang-kotlin-coroutines",
          "name": "Vert.x Kotlin coroutines",
          "description": "Kotlin coroutines for Vert.x, gives you super powers such as async/await or Go-like channels. This enables you to write your verticle code in a familiar sequential style."
        }
      ]
    },
    {
      "code": "microservices",
      "category": "Microservices",
      "description": "Vert.x offers various component to build microservice-based applications.",
      "items": [
        {
          "groupId": "io.vertx",
          "artifactId": "vertx-service-discovery",
          "name": "Vert.x Service Discovery",
          "description": "This component lets you publish, lookup and bind to any type of services."
        },
        {
          "groupId": "io.vertx",
          "artifactId": "vertx-circuit-breaker",
          "name": "Vert.x Circuit Breaker",
          "description": "This component provides an implementation of the circuit breaker pattern for Vert.x"
        },
        {
          "groupId": "io.vertx",
          "artifactId": "vertx-config",
          "name": "Vert.x Config",
          "description": "This component provides an extensible way to configure Vert.x applications."
        }
      ]
    },
    {
      "code": "iot",
      "category": "IoT",
      "items": [
        {
          "groupId": "io.vertx",
          "artifactId": "vertx-mqtt",
          "name": "MQTT",
          "description": "Vert.x MQTT (client and server) is able to handle connections, communication and messages exchange with remote MQTT clients. Its API provides a bunch of events related to protocol messages received by clients and exposes allow to send messages to them."
        }
      ]
    },
    {
      "code": "auth",
      "category": "Authentication and Authorisation",
      "description": "Vert.x provides simple APIs for auth in your applications. We also provide a few out of the box implementations.",
      "items": [
        {
          "groupId": "io.vertx",
          "artifactId": "vertx-auth-jdbc",
          "name": "JDBC auth",
          "description": "Auth implementation backed by JDBC"
        },
        {
          "groupId": "io.vertx",
          "artifactId": "vertx-auth-jwt",
          "name": "JWT auth",
          "description": "Auth implementation using JSON web tokens (JWT)"
        },
        {
          "groupId": "io.vertx",
          "artifactId": "vertx-auth-shiro",
          "name": "Shiro auth",
          "description": "Auth implementation using Apache Shiro"
        },
        {
          "groupId": "io.vertx",
          "artifactId": "vertx-auth-mongo",
          "name": "MongoDB auth",
          "description": "Auth implementation using MongoDB"
        },
        {
          "groupId": "io.vertx",
          "artifactId": "vertx-auth-oauth2",
          "name": "OAuth 2",
          "description": "Auth implementation for OAuth2"
        },
        {
          "groupId": "io.vertx",
          "artifactId": "vertx-auth-htdigest",
          "name": ".htdigest Auth",
          "description": "Authentication and authorization support based on .htdigest files."
        },
        {
          "groupId": "io.vertx",
          "artifactId": "vertx-auth-properties",
          "name": "Properties Auth",
          "description": "Authentication and authorization support based on Java properties files."
        },
        {
          "groupId": "io.vertx",
          "artifactId": "vertx-auth-ldap",
          "name": "LDAP Auth",
          "description": "Implementation using JDK built-in LDAP capabilities."
        },
        {
          "groupId": "io.vertx",
          "artifactId": "vertx-auth-webauthn",
          "name": "Webauthn Auth",
          "description": "FIDO2 WebAuthn (password-less) implementation."
        },
        {
          "groupId": "io.vertx",
          "artifactId": "vertx-auth-htpasswd",
          "name": ".htpasswd Auth",
          "description": "Authentication and authorization support based on .htpasswd files."
        },
        {
          "groupId": "io.vertx",
          "artifactId": "vertx-auth-sql-client",
          "name": "Sql Client Auth",
          "description": "Authentication and authorization support based on the Vert.x SQL client and a relational database."
        }
      ]
    },
    {
      "code": "messaging",
      "category": "Messaging",
      "items": [
        {
          "groupId": "io.vertx",
          "artifactId": "vertx-amqp-client",
          "name": "AMQP Client",
          "description": "A client for interacting with an AMQP 1.0 broker or router."
        },
        {
          "groupId": "io.vertx",
          "artifactId": "vertx-stomp",
          "name": "STOMP Client and Server",
          "description": "Vert.x provides an implementation of the STOMP protocol."
        },
        {
          "groupId": "io.vertx",
          "artifactId": "vertx-rabbitmq-client",
          "name": "RabbitMQ Client",
          "description": "A client to interact with RabbitMQ."
        },
        {
          "groupId": "io.vertx",
          "artifactId": "vertx-amqp-bridge",
          "name": "AMQP Bridge",
          "description": "A bridge for interacting with an AMQP 1.0 broker or router."
        }
      ]
    },
    {
      "code": "integration",
      "category": "Integration",
      "items": [
        {
          "groupId": "io.vertx",
          "artifactId": "vertx-mail-client",
          "name": "Mail Client",
          "description": "Vert.x provides a simple SMTP mail client so you can send emails from your applications."
        },
        {
          "groupId": "io.vertx",
          "artifactId": "vertx-jca",
          "name": "JCA Adaptor",
          "description": "Vert.x provides a Java Connector Architecture (JCA) adaptor which allows it to interoperate with any JavaEE application server."
        },
        {
          "groupId": "io.vertx",
          "artifactId": "vertx-kafka-client",
          "name": "Kafka Client",
          "description": "A client to interact with Apache Kafka."
        },
        {
          "groupId": "io.vertx",
          "artifactId": "vertx-consul-client",
          "name": "Consul Client",
          "description": "A client to interact with Consul."
        }
      ]
    },
    {
      "code": "eventbus",
      "category": "Event Bus Bridge",
      "description": "Vert.x offers various bridges to extend the Event Bus beyond the JVM",
      "items": [
        {
          "groupId": "io.vertx",
          "artifactId": "vertx-tcp-eventbus-bridge",
          "name": "TCP Eventbus Bridge",
          "description": "An eventbus bridge that lets you interact with Vert.x from any application thanks to a TCP socket."
        },
        {
          "groupId": "io.vertx",
          "artifactId": "vertx-camel-bridge",
          "name": "Camel Bridge",
          "description": "An eventbus bridge that lets you interact with Apache Camel endpoints and routes"
        }
      ]
    },
    {
      "code": "monitoring",
      "category": "Monitoring",
      "description": "Vert.x offers various component to keep your Vert.x application on track when running in production",
      "items": [
        {
          "groupId": "io.vertx",
          "artifactId": "vertx-dropwizard-metrics",
          "name": "Metrics using Dropwizard",
          "description": "This component captures metrics from Vert.x core components and exposes them using Dropwizard."
        },
        {
          "groupId": "io.vertx",
          "artifactId": "vertx-micrometer-metrics",
          "name": "Metrics using Micrometer",
          "description": "This component captures metrics from Vert.x core components and exposes them using Micrometer."
        },
        {
          "groupId": "io.vertx",
          "artifactId": "vertx-health-check",
          "name": "Vert.x Health Check",
          "description": "This component provides a simple way to expose health checks."
        },
        {
          "groupId": "io.vertx",
          "artifactId": "vertx-zipkin",
          "name": "Tracing using Zipkin",
          "description": "Distributed tracing with Zipkin."
        },
        {
          "groupId": "io.vertx",
          "artifactId": "vertx-opentracing",
          "name": "Tracing using OpenTracing",
          "description": "Distributed tracing with OpenTracing."
        },
        {
          "groupId": "io.vertx",
          "artifactId": "vertx-opentelemetry",
          "name": "Tracing using OpenTelemetry",
          "description": "Distributed tracing with OpenTelemetry."
        }
      ]
    },
    {
      "code": "testing",
      "category": "Testing",
      "description": "Vert.x-Unit is an unit testing tool-kit especially design to work well with asynchronous code.",
      "items": [
        {
          "groupId": "io.vertx",
          "name": "Vert.x Unit",
          "artifactId": "vertx-unit"
        },
        {
          "groupId": "io.vertx",
          "name": "Vert.x JUnit5",
          "artifactId": "vertx-junit5"
        }
      ]
    },
    {
      "code": "cluster",
      "category": "Clustering",
      "description": "Vert.x supports clustering and HA out of the box. Cluster group management is implemented in cluster managers which are pluggable.",
      "items": [
        {
          "groupId": "io.vertx",
          "name": "Hazelcast Cluster Manager",
          "artifactId": "vertx-hazelcast",
          "description": "Cluster manager implementation that uses Hazelcast."
        },
        {
          "groupId": "io.vertx",
          "name": "Infinispan Cluster Manager",
          "artifactId": "vertx-infinispan",
          "description": "Cluster manager implementation that uses Infinispan."
        },
        {
          "groupId": "io.vertx",
          "name": "Apache Ignite Cluster Manager",
          "artifactId": "vertx-ignite",
          "description": "Cluster manager implementation that uses Apache Ignite."
        },
        {
          "groupId": "io.vertx",
          "name": "Apache Zookeper Cluster Manager",
          "artifactId": "vertx-zookeeper",
          "description": "Cluster manager implementation that uses Apache Zookeeper."
        }
      ]
    },
    {
      "code": "services",
      "category": "Services",
      "description": "Vert.x services are a simple and effective way to encapsulate reusable functionality for use elsewhere. Services are deployed using a service identifier which decouples the user from details of the implementation.",
      "items": [
        {
          "groupId": "io.vertx",
          "name": "Service Proxies",
          "artifactId": "vertx-service-proxy",
          "description": "Proxies allow remote event bus services to be called as if they were local."
        },
        {
          "groupId": "io.vertx",
          "name": "SockJS Service Proxies",
          "artifactId": "vertx-sockjs-service-proxy",
          "description": "Allow event bus services to be called from JavaScript (browser or Node.js)."
        },
        {
          "groupId": "io.vertx",
          "name": "gRPC",
          "artifactId": "vertx-grpc",
          "description": "Implement gRPC Clients and Servers for Vert.x."
        },
        {
          "groupId": "io.vertx",
          "name": "Service Factories",
          "artifactId": "vertx-service-factory",
          "description": "How to package and deploy Vert.x independent services."
        },
        {
          "groupId": "io.vertx",
          "name": "Maven Service Factory",
          "artifactId": "vertx-maven-service-factory",
          "description": "This lets you dynamically install and deploy services from Maven at run-time."
        },
        {
          "groupId": "io.vertx",
          "name": "HTTP Service Factory",
          "artifactId": "vertx-http-service-factory",
          "description": "This lets you dynamically install and deploy services from an HTTP server (for example Bintray at run-time."
        }
      ]
    },
    {
      "code": "standards",
      "category": "Standards",
      "items": [
        {
          "groupId": "io.vertx",
          "artifactId": "vertx-json-schema",
          "name": "JSON Schema",
          "description": "An extensible implementation of the Json Schema specification to validate every JSON data structure, asynchronously."
        }
      ]
    },
    {
      "code": "devops",
      "category": "Devops",
      "items": [
        {
          "groupId": "io.vertx",
          "artifactId": "vertx-shell",
          "name": "Shell",
          "description": "This component lets you interact with your Vert.x application using a CLI interface."
        }
      ]
    }
  ],
  "mutinyStack": [
    {
      "code": "web",
      "category": "Web",
      "items": [
        {
          "groupId": "io.smallrye.reactive",
          "artifactId": "smallrye-mutiny-vertx-web",
          "name": "Vert.x Web",
          "description": "Vert.x-Web is a tool-kit for writing sophisticated modern web applications and HTTP microservices."
        },
        {
          "groupId": "io.smallrye.reactive",
          "artifactId": "smallrye-mutiny-vertx-web-client",
          "name": "Vert.x Web Client",
          "description": "Vert.x Web Client is an easy to use advanced HTTP client."
        },
        {
          "groupId": "io.smallrye.reactive",
          "artifactId": "smallrye-mutiny-vertx-web-graphql",
          "name": "Web GraphQL Handler",
          "description": "Create GraphQL servers with Vert.x Web and the GraphQL-Java library."
        },
        {
          "groupId": "io.vertx",
          "artifactId": "vertx-web-api-contract",
          "name": "Web API Contract",
          "description": "Web API Contract supports OpenApi 3 specification for a design first approach and provides a validation framework."
        },
        {
          "groupId": "io.smallrye.reactive",
          "artifactId": "smallrye-mutiny-vertx-web-templ-thymeleaf",
          "name": "Thymeleaf template engine"
        },
        {
          "groupId": "io.smallrye.reactive",
          "artifactId": "smallrye-mutiny-vertx-web-templ-handlebars",
          "name": "Handlebars template engine"
        },
        {
          "groupId": "io.smallrye.reactive",
          "artifactId": "smallrye-mutiny-vertx-web-templ-jade",
          "name": "Jade template engine"
        },
        {
          "groupId": "io.smallrye.reactive",
          "artifactId": "smallrye-mutiny-vertx-web-templ-mvel",
          "name": "MVEL template engine"
        },
        {
          "groupId": "io.smallrye.reactive",
          "artifactId": "smallrye-mutiny-vertx-web-templ-pebble",
          "name": "Pebble template engine"
        },
        {
          "groupId": "io.smallrye.reactive",
          "artifactId": "smallrye-mutiny-vertx-web-templ-freemarker",
          "name": "Apache FreeMarker template engine"
        },
        {
          "groupId": "io.smallrye.reactive",
          "artifactId": "smallrye-mutiny-vertx-web-templ-rocker",
          "name": "Rocker template engine"
        },
        {
          "groupId": "io.vertx",
          "artifactId": "vertx-web-templ-httl",
          "name": "HTTL template engine"
        },
        {
          "groupId": "io.vertx",
          "artifactId": "vertx-web-sstore-cookie",
          "name": "Cookie session storage"
        },
        {
          "groupId": "io.vertx",
          "artifactId": "vertx-web-sstore-redis",
          "name": "Redis session storage"
        },
        {
          "groupId": "io.vertx",
          "artifactId": "vertx-web-sstore-infinispan",
          "name": "Session storage with Infinispan Client"
        },
        {
          "groupId": "io.smallrye.reactive",
          "artifactId": "smallrye-mutiny-vertx-web-validation",
          "name": "Web Validation",
          "description": "A library to declaratively parse and validate incoming Vert.x Web HTTP requests."
        },
        {
          "groupId": "io.smallrye.reactive",
          "artifactId": "smallrye-mutiny-vertx-web-openapi",
          "name": "Web OpenAPI",
          "description": "Extends Vert.x Web to support OpenAPI 3, bringing a simple interface for building web routers that conform to OpenAPI contracts."
        }
      ]
    },
    {
      "code": "dataaccess",
      "category": "Data Access",
      "description": "Vert.x provides a few different asynchronous clients for accessing various data stores from your application. You don't have to use these clients - you could use clients direct from the vendor if you prefer (e.g. MongoDB provide their own cool async and reactive clients), but these provide a simple async API which is available in various languages.",
      "items": [
        {
          "groupId": "io.smallrye.reactive",
          "artifactId": "smallrye-mutiny-vertx-pg-client",
          "name": "Reactive PostgreSQL client"
        },
        {
          "groupId": "io.smallrye.reactive",
          "artifactId": "smallrye-mutiny-vertx-mysql-client",
          "name": "Reactive MySQL client"
        },
        {
          "groupId": "io.smallrye.reactive",
          "artifactId": "smallrye-mutiny-vertx-db2-client",
          "name": "Reactive DB2 client"
        },
        {
          "groupId": "io.smallrye.reactive",
          "artifactId": "smallrye-mutiny-vertx-mssql-client",
          "name": "Reactive MSSQL client"
        },
        {
          "groupId": "io.smallrye.reactive",
          "artifactId": "smallrye-mutiny-vertx-mongo-client",
          "name": "MongoDB client"
        },
        {
          "groupId": "io.smallrye.reactive",
          "artifactId": "smallrye-mutiny-vertx-jdbc-client",
          "name": "JDBC client"
        },
        {
          "groupId": "io.smallrye.reactive",
          "artifactId": "smallrye-mutiny-vertx-redis-client",
          "name": "Redis client"
        },
        {
          "groupId": "io.smallrye.reactive",
          "artifactId": "smallrye-mutiny-vertx-cassandra-client",
          "name": "Cassandra client"
        },
        {
          "groupId": "io.smallrye.reactive",
          "artifactId": "smallrye-mutiny-vertx-sql-client-templates",
          "name": "SQL Client Templates",
          "description": "A small library designed to facilitate the execution and data manipulation of SQL queries."
        }
      ]
    },
    {
      "code": "reactive",
      "category": "Reactive",
      "description": "Vert.x provides a few components to make your applications more reactive.",
      "items": [
        {
          "groupId": "io.vertx",
          "artifactId": "vertx-rx-java",
          "name": "Vert.x RxJava v1",
          "description": "Vert.x API for RxJava 1."
        },
        {
          "groupId": "io.vertx",
          "artifactId": "vertx-rx-java2",
          "name": "Vert.x RxJava v2",
          "description": "Vert.x API for RxJava 2."
        },
        {
          "groupId": "io.vertx",
          "artifactId": "vertx-rx-java3",
          "name": "Vert.x RxJava v3",
          "description": "Vert.x API for RxJava 3."
        },
        {
          "groupId": "io.vertx",
          "artifactId": "vertx-reactive-streams",
          "name": "Reactive streams",
          "description": "Vert.x supports reactive streams so your applications can interoperate with other reactive systems such as Akka or Project Reactor."
        },
        {
          "groupId": "io.vertx",
          "artifactId": "vertx-sync",
          "name": "Vert.x Sync",
          "description": "Vertx-sync allows you to deploy verticles that run using fibers. Fibers are very lightweight threads that can be blocked without blocking a kernel thread. This enables you to write your verticle code in a familiar synchronous style."
        },
        {
          "groupId": "io.vertx",
          "artifactId": "vertx-lang-kotlin-coroutines",
          "name": "Vert.x Kotlin coroutines",
          "description": "Kotlin coroutines for Vert.x, gives you super powers such as async/await or Go-like channels. This enables you to write your verticle code in a familiar sequential style."
        }
      ]
    },
    {
      "code": "microservices",
      "category": "Microservices",
      "description": "Vert.x offers various component to build microservice-based applications.",
      "items": [
        {
          "groupId": "io.smallrye.reactive",
          "artifactId": "smallrye-mutiny-vertx-service-discovery",
          "name": "Vert.x Service Discovery",
          "description": "This component lets you publish, lookup and bind to any type of services."
        },
        {
          "groupId": "io.smallrye.reactive",
          "artifactId": "smallrye-mutiny-vertx-circuit-breaker",
          "name": "Vert.x Circuit Breaker",
          "description": "This component provides an implementation of the circuit breaker pattern for Vert.x"
        },
        {
          "groupId": "io.smallrye.reactive",
          "artifactId": "smallrye-mutiny-vertx-config",
          "name": "Vert.x Config",
          "description": "This component provides an extensible way to configure Vert.x applications."
        }
      ]
    },
    {
      "code": "iot",
      "category": "IoT",
      "items": [
        {
          "groupId": "io.smallrye.reactive",
          "artifactId": "smallrye-mutiny-vertx-mqtt",
          "name": "MQTT",
          "description": "Vert.x MQTT (client and server) is able to handle connections, communication and messages exchange with remote MQTT clients. Its API provides a bunch of events related to protocol messages received by clients and exposes allow to send messages to them."
        }
      ]
    },
    {
      "code": "auth",
      "category": "Authentication and Authorisation",
      "description": "Vert.x provides simple APIs for auth in your applications. We also provide a few out of the box implementations.",
      "items": [
        {
          "groupId": "io.smallrye.reactive",
          "artifactId": "smallrye-mutiny-vertx-auth-jdbc",
          "name": "JDBC auth",
          "description": "Auth implementation backed by JDBC"
        },
        {
          "groupId": "io.smallrye.reactive",
          "artifactId": "smallrye-mutiny-vertx-auth-jwt",
          "name": "JWT auth",
          "description": "Auth implementation using JSON web tokens (JWT)"
        },
        {
          "groupId": "io.smallrye.reactive",
          "artifactId": "smallrye-mutiny-vertx-auth-shiro",
          "name": "Shiro auth",
          "description": "Auth implementation using Apache Shiro"
        },
        {
          "groupId": "io.smallrye.reactive",
          "artifactId": "smallrye-mutiny-vertx-auth-mongo",
          "name": "MongoDB auth",
          "description": "Auth implementation using MongoDB"
        },
        {
          "groupId": "io.smallrye.reactive",
          "artifactId": "smallrye-mutiny-vertx-auth-oauth2",
          "name": "OAuth 2",
          "description": "Auth implementation for OAuth2"
        },
        {
          "groupId": "io.smallrye.reactive",
          "artifactId": "smallrye-mutiny-vertx-auth-htdigest",
          "name": ".htdigest Auth",
          "description": "Authentication and authorization support based on .htdigest files."
        },
        {
          "groupId": "io.smallrye.reactive",
          "artifactId": "smallrye-mutiny-vertx-auth-properties",
          "name": "Properties Auth",
          "description": "Authentication and authorization support based on Java properties files."
        },
        {
          "groupId": "io.smallrye.reactive",
          "artifactId": "smallrye-mutiny-vertx-auth-ldap",
          "name": "LDAP Auth",
          "description": "Implementation using JDK built-in LDAP capabilities."
        },
        {
          "groupId": "io.smallrye.reactive",
          "artifactId": "smallrye-mutiny-vertx-auth-webauthn",
          "name": "Webauthn Auth",
          "description": "FIDO2 WebAuthn (password-less) implementation."
        },
        {
          "groupId": "io.smallrye.reactive",
          "artifactId": "smallrye-mutiny-vertx-auth-htpasswd",
          "name": ".htpasswd Auth",
          "description": "Authentication and authorization support based on .htpasswd files."
        },
        {
          "groupId": "io.smallrye.reactive",
          "artifactId": "smallrye-mutiny-vertx-auth-sql-client",
          "name": "Sql Client Auth",
          "description": "Authentication and authorization support based on the Vert.x SQL client and a relational database."
        }
      ]
    },
    {
      "code": "messaging",
      "category": "Messaging",
      "items": [
        {
          "groupId": "io.smallrye.reactive",
          "artifactId": "smallrye-mutiny-vertx-amqp-client",
          "name": "AMQP Client",
          "description": "A client for interacting with an AMQP 1.0 broker or router."
        },
        {
          "groupId": "io.smallrye.reactive",
          "artifactId": "smallrye-mutiny-vertx-stomp",
          "name": "STOMP Client and Server",
          "description": "Vert.x provides an implementation of the STOMP protocol."
        },
        {
          "groupId": "io.smallrye.reactive",
          "artifactId": "smallrye-mutiny-vertx-rabbitmq-client",
          "name": "RabbitMQ Client",
          "description": "A client to interact with RabbitMQ."
        },
        {
          "groupId": "io.vertx",
          "artifactId": "vertx-amqp-bridge",
          "name": "AMQP Bridge",
          "description": "A bridge for interacting with an AMQP 1.0 broker or router."
        }
      ]
    },
    {
      "code": "integration",
      "category": "Integration",
      "items": [
        {
          "groupId": "io.smallrye.reactive",
          "artifactId": "smallrye-mutiny-vertx-mail-client",
          "name": "Mail Client",
          "description": "Vert.x provides a simple SMTP mail client so you can send emails from your applications."
        },
        {
          "groupId": "io.vertx",
          "artifactId": "vertx-jca",
          "name": "JCA Adaptor",
          "description": "Vert.x provides a Java Connector Architecture (JCA) adaptor which allows it to interoperate with any JavaEE application server."
        },
        {
          "groupId": "io.smallrye.reactive",
          "artifactId": "smallrye-mutiny-vertx-kafka-client",
          "name": "Kafka Client",
          "description": "A client to interact with Apache Kafka."
        },
        {
          "groupId": "io.smallrye.reactive",
          "artifactId": "smallrye-mutiny-vertx-consul-client",
          "name": "Consul Client",
          "description": "A client to interact with Consul."
        }
      ]
    },
    {
      "code": "eventbus",
      "category": "Event Bus Bridge",
      "description": "Vert.x offers various bridges to extend the Event Bus beyond the JVM",
      "items": [
        {
          "groupId": "io.smallrye.reactive",
          "artifactId": "smallrye-mutiny-vertx-tcp-eventbus-bridge",
          "name": "TCP Eventbus Bridge",
          "description": "An eventbus bridge that lets you interact with Vert.x from any application thanks to a TCP socket."
        },
        {
          "groupId": "io.vertx",
          "artifactId": "vertx-camel-bridge",
          "name": "Camel Bridge",
          "description": "An eventbus bridge that lets you interact with Apache Camel endpoints and routes"
        }
      ]
    },
    {
      "code": "monitoring",
      "category": "Monitoring",
      "description": "Vert.x offers various component to keep your Vert.x application on track when running in production",
      "items": [
        {
          "groupId": "io.vertx",
          "artifactId": "vertx-dropwizard-metrics",
          "name": "Metrics using Dropwizard",
          "description": "This component captures metrics from Vert.x core components and exposes them using Dropwizard."
        },
        {
          "groupId": "io.smallrye.reactive",
          "artifactId": "smallrye-mutiny-vertx-micrometer-metrics",
          "name": "Metrics using Micrometer",
          "description": "This component captures metrics from Vert.x core components and exposes them using Micrometer."
        },
        {
          "groupId": "io.vertx",
          "artifactId": "vertx-health-check",
          "name": "Vert.x Health Check",
          "description": "This component provides a simple way to expose health checks."
        },
        {
          "groupId": "io.vertx",
          "artifactId": "vertx-zipkin",
          "name": "Tracing using Zipkin",
          "description": "Distributed tracing with Zipkin."
        },
        {
          "groupId": "io.vertx",
          "artifactId": "vertx-opentracing",
          "name": "Tracing using OpenTracing",
          "description": "Distributed tracing with OpenTracing."
        },
        {
          "groupId": "io.vertx",
          "artifactId": "vertx-opentelemetry",
          "name": "Tracing using OpenTelemetry",
          "description": "Distributed tracing with OpenTelemetry."
        }
      ]
    },
    {
      "code": "testing",
      "category": "Testing",
      "description": "Vert.x-Unit is an unit testing tool-kit especially design to work well with asynchronous code.",
      "items": [
        {
          "groupId": "io.vertx",
          "name": "Vert.x Unit",
          "artifactId": "vertx-unit"
        },
        {
          "groupId": "io.smallrye.reactive",
          "name": "Vert.x JUnit5",
          "artifactId": "smallrye-mutiny-vertx-junit5"
        }
      ]
    },
    {
      "code": "cluster",
      "category": "Clustering",
      "description": "Vert.x supports clustering and HA out of the box. Cluster group management is implemented in cluster managers which are pluggable.",
      "items": [
        {
          "groupId": "io.vertx",
          "name": "Hazelcast Cluster Manager",
          "artifactId": "vertx-hazelcast",
          "description": "Cluster manager implementation that uses Hazelcast."
        },
        {
          "groupId": "io.vertx",
          "name": "Infinispan Cluster Manager",
          "artifactId": "vertx-infinispan",
          "description": "Cluster manager implementation that uses Infinispan."
        },
        {
          "groupId": "io.vertx",
          "name": "Apache Ignite Cluster Manager",
          "artifactId": "vertx-ignite",
          "description": "Cluster manager implementation that uses Apache Ignite."
        },
        {
          "groupId": "io.vertx",
          "name": "Apache Zookeper Cluster Manager",
          "artifactId": "vertx-zookeeper",
          "description": "Cluster manager implementation that uses Apache Zookeeper."
        }
      ]
    },
    {
      "code": "services",
      "category": "Services",
      "description": "Vert.x services are a simple and effective way to encapsulate reusable functionality for use elsewhere. Services are deployed using a service identifier which decouples the user from details of the implementation.",
      "items": [
        {
          "groupId": "io.vertx",
          "name": "Service Proxies",
          "artifactId": "vertx-service-proxy",
          "description": "Proxies allow remote event bus services to be called as if they were local."
        },
        {
          "groupId": "io.vertx",
          "name": "SockJS Service Proxies",
          "artifactId": "vertx-sockjs-service-proxy",
          "description": "Allow event bus services to be called from JavaScript (browser or Node.js)."
        },
        {
          "groupId": "io.vertx",
          "name": "gRPC",
          "artifactId": "vertx-grpc",
          "description": "Implement gRPC Clients and Servers for Vert.x."
        },
        {
          "groupId": "io.vertx",
          "name": "Service Factories",
          "artifactId": "vertx-service-factory",
          "description": "How to package and deploy Vert.x independent services."
        },
        {
          "groupId": "io.vertx",
          "name": "Maven Service Factory",
          "artifactId": "vertx-maven-service-factory",
          "description": "This lets you dynamically install and deploy services from Maven at run-time."
        },
        {
          "groupId": "io.vertx",
          "name": "HTTP Service Factory",
          "artifactId": "vertx-http-service-factory",
          "description": "This lets you dynamically install and deploy services from an HTTP server (for example Bintray at run-time."
        }
      ]
    },
    {
      "code": "standards",
      "category": "Standards",
      "items": [
        {
          "groupId": "io.smallrye.reactive",
          "artifactId": "smallrye-mutiny-vertx-json-schema",
          "name": "JSON Schema",
          "description": "An extensible implementation of the Json Schema specification to validate every JSON data structure, asynchronously."
        }
      ]
    },
    {
      "code": "devops",
      "category": "Devops",
      "items": [
        {
          "groupId": "io.smallrye.reactive",
          "artifactId": "smallrye-mutiny-vertx-shell",
          "name": "Shell",
          "description": "This component lets you interact with your Vert.x application using a CLI interface."
        }
      ]
    }
  ]
}
